<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>「LCT」之总结</title>
    <url>/posts/About-LCT/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX19Av2HQOkxoNjKpxmvbq9YFYz7rDh0Aeg1EgElNoQORZ6WYyPzKs80qoLBtDow/yVeNUitjDqFGXH5qUu1ZtUXQadlwuuqNTrVs4YXmc3oDzmdjKVz0IfpLp0e6+wUpACxUUN+ObZEUOWZAvJVlYQsVND5fWnmUu8Rgoh0meJ322Qmlh9gWn1wDmb0xzshZHA5lyTkV2qU0Kw3SJaFFMVwMnCJvdRlx7SnoRAK3efi1opkOfvp4M4Qnr7RhoseD9n0IM4QB1sUhhBZkzZP8LKY1wPiigQ2HWnfQD166ZUk5JFEbF9tJ8N5/McF/sVtjhunaEeeRMxeRQ2IeQrvC16IpJQ3t5Cuc1zu0RVg9d7Tv40UEPMtN0Zv6271EH/StDZu3b3yln8BUUd/kNO6Bf5u4BfntycobHnX8q3yoosdxndK1M2zHfeSnnMy1hMLaWL00k64q0STbHH8IaD4toAMjV81UkRsVPi30cCMZU+HvKpeU1y/T/T0U8b5fNR2ioZjUM3pQsQJgDQ==
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>LCT</category>
      </categories>
      <tags>
        <tag>LCT</tag>
      </tags>
  </entry>
  <entry>
    <title>「OI之数学」之总结</title>
    <url>/posts/About-Math/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1+tVDeYmmFjhfPiRT0LuSy1fC6j2jWzAko=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>「网络流」之总结</title>
    <url>/posts/About-Network-Flows/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX19qKLg+xK8QQ8+6USZ405DFPR4DCCc6IKPp6bvjirxPV2nV88hy5B+vB9Jj/uqtdhG91TsPgPyrDIl84FxZ6YLrbBPkfpJn6j5xmtJ09bqLriarZDppmq/zWdvNBT5LsmMWT4C8eV3isGk67jOovzo7RqD0CvIBI0ZXQDH910yFeqJcREDsx1KQ+OMLkWmd8mn72ZmFZhPuJiohEGaIf1+h5B8hLwBwQ1z5AM+Daussa4JozF+KRNL0cxyFYVdzgKRKM7lpgLGUEfv+BIcSA7zlw4H16CeD+B+6ZBX2aM+QYpAOLrcFnt9mu5qZZQBlqd4Da/6uhO7BtoN3m2bQbFcViHUgwlW9e65jWj6sUZmGVEVScKCQSwlK46As1tI6N92wbUEP8Ujw+FkbEz0b06+JnX26IP+DL1xxEW4hgqy6hSKrDroLg2PA8sxK3cMYFshKlsWjctDMm3loXRgLLr1CRGv47DtQuFBXv39KLCaibsqq+bRo7PEH5CFgSH3648A4HfIjxvNPdw==
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>网络流</category>
      </categories>
      <tags>
        <tag>网络流</tag>
      </tags>
  </entry>
  <entry>
    <title>「奇怪DP」之总结</title>
    <url>/posts/About-Stange-DP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX19s9jz6mlmpBfRFCGZGlzJAYnR4dHu62ug=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]P4172水管局长</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B0%B4%E7%AE%A1%E5%B1%80%E9%95%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
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
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>LCT相关训练</category>
      </categories>
      <tags>
        <tag>LCT</tag>
        <tag>Kruskal</tag>
      </tags>
  </entry>
  <entry>
    <title>“跬步,以至千里”</title>
    <url>/posts/New-Year-2020/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>
    <div id="aplayer-wkBnllqw" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1427930" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
<p>这是本文章的结尾.</p>
]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>我</tag>
      </tags>
  </entry>
  <entry>
    <title>我的收藏夹</title>
    <url>/posts/My-Favorite/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>注: 为保护下述网址的知识产权,此处仅提供URL</p>
<p>又: $\%\%\%dalaos$</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>URL</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.cnblogs.com/flashhu/p/8324551.html" target="_blank" rel="noopener">https://www.cnblogs.com/flashhu/p/8324551.html</a></td>
<td>1.LCT概念</td>
</tr>
<tr>
<td><a href="https://www.cnblogs.com/flashhu/p/9498517.html" target="_blank" rel="noopener">https://www.cnblogs.com/flashhu/p/9498517.html</a></td>
<td>2.LCT应用</td>
</tr>
<tr>
<td><a href="https://www.luogu.com.cn/blog/command-block/fft-xue-xi-bi-ji" target="_blank" rel="noopener">https://www.luogu.com.cn/blog/command-block/fft-xue-xi-bi-ji</a></td>
<td>3.FFT极详讲解</td>
</tr>
<tr>
<td><a href="https://oi-wiki.org/math/poly/fft/" target="_blank" rel="noopener">https://oi-wiki.org/math/poly/fft/</a></td>
<td>4.FFT讲解2</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>工具与资源</category>
      </categories>
      <tags>
        <tag>我</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]疫情控制</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-YiQingKongZhi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>动态规划</category>
        <category>树上DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>树上DP</tag>
        <tag>二分答案</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]NOIP2018保卫王国</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-KingdomProtection/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1+99FJcjyz9a9w60Opt45M/L3muHW2i16seRsKXlzQTeD/f8fn4tUf6TQ1p+0n+EOd9PYiVeVqeA+lvI3lzDbLiwgs9m+RhGfPbJJ1JWy4chQUUQ47EnSyUu1UPx+ZyT/DcEeq3wO881Opp0/pLU2S6+OFUv9fsYjC8pBkuQMKxvDlBprx+Sm/7n0hQNbEHhq5fzmbF7C7W6nuXT4A0G1rw48F9CQ1B7NpNM0cSdZ0cNINOeepMaTLQGZRC5T0iwUKFJw6pLbD2qyrc4dC6RT+nlmP4MlPgVjTotYMunwTHcx8UXgu39fbUxj2840AoPf2sPlQYYpPyewTbx/QxZHXP8wwKgEEyqvKORdk0PKjkbg4WlZ+FgLNu6zMPg9IuHjZX5NkA3McRjwNYQvLlOhODZaFwWTAtvyQpg0ixjyoX7/8hRz2Ib43TtJD47DJrRfqkFm43x2bZjHCOhtAcyJ/+jzapYDdC4johPk6mw4oNRm8ix3Mal5ll3gkzPVLITT9RmcehIx5SAH/YBOg/Xu/USUMBTdj5lowLSQsf7YTaAr5EMB/O5T4C/UOGf0gHh+aSwKDJnkIQ7BDhi6dyKMLpxgYwHZ5RYAhTTR52hOCY/zW5DqG5KNvt6Y54/Gso8thzPFuB5tOS4Gh/7ZtWCstvwGvYgV6DHTrk+S1nbPGtJ8pACtGItlyLCQZpxV4GYgB3lMHVRDec0IZmFXfzatNRjMCDmHB+pEiqzFCJdpllj29RltGV1oohGDNJfAe/mJCeaKziIvs6tPshTWlY2Y5zPcnV7TCkAcLPw+lFVFEuDP/LbFkFZIbybnqSk0Jj6eMZYmWa+XFXuaCL/DQnnmu99aLaaNh2I5oR7EzWJYSeUWekUsIisHHZRTtKPxvqH2bcfYTOV0tpc7Roopv3Wnht8fKgJk1sL6ATVxdnOBFXsR6LFAY4i3Ay7JYNLR4PUKMxWIy0fTluMtPjf3AXNp5neiUR8GUq5P3rU56uQCTUUwXazLbJFlGN2xPMl9tsVrI00gpfDuUTHXTWHn8kJtYg093+BfwttOW+JYm1uENbMpkeq4y7Lj8Ciu1HK5NfxxI9D0wdhUMu80dz5t4ZDR6ro2yScmRedCELQQC4mueSWdzbKnMtoX86KWuK82cubOlIkTuw2ocBTfrZn3aQ9iFY/8o9McmFSPoIgMyOxHqmkIHW1qre2QvKlsMoc2wUQFYENM16njFVCdBttlJc8De+0q9sbVAcKInaQnB/TLQ6aUUXucnjjgX29TBY+mYiZMBYGIUY00WsibDz8G6bZ73ZEe8G13iXBkDLsNNtTpjNLP0ChxddN0MBlb6mVGZ2UocdJL7GbXvevCmjaJY/QYRA3lZ8J4DGpt3p/QeF6KoMEH3UMaCubIhIXqsN5hsci9QedUk9v4XMtqcwierrJttlTreEUxcXuLqP6SkT3jlhZti31ciXEggaQ+9XdJ/VMsEiOh7zSAzlr6HBGDYGAFk5ori+xRHdhIjq5b7Z+dQ391ByDJWdYsJVCAPE9B7jX1KcrWiAvKP9xIdj+w409YKB/fYgEdGTrLvvUe+7NFxfSpnMECwLcb2aHELKVAm1gjSd6w7b5Hpkm2S02sXpW/haBd9V2yGsDG9qCkUtDRMrGW5Wh4Rs93fXPah1pc8aHMCHuXEYzyg/0JxELNHMTOyZabBNsbyDUl6pf6vA6ZUFRh+L/yjaEMm2ZL1WZoCQEGpYUmuOzTDLvIk1gYBV7f+vkbSxCfGBYhN9ZUaY0TxnVZs8FNS7QlGR3OGD6wIVcUA/snZe9LfcvY/Q2+WDscf4IEhcxlWHut3cyeYqIP0/nJsZfYOgQY/CjDIHZtorvl0m40s3VEk3sBboNa0KCJTjDXu8KfPnj3NydGsD5oeuqJQXfJ/g8Qls7bNrRk7iN8uEScsaO3QrRXKDqDAvVCd7hd0kiBkdYzePxEazyxrNBgH1eEDjK0+VqMzHGCOILApM2P23og9kfVbjJ946/PEUndYxbOacDeRdOfIFNWYCGTczJKkTcoVu0Gf/Riai8IZuGCCknFg3m6M8bV6EMfby6Gtij9tZo1c1NFnWfRjcad2mb9g/aF9A/2+dhNaz+DopHPQr++Czrj7CA1rt68ZS4FA+B7/2/Sf+i6B0l3Yh7uMCcLeRDHYXhhM0tFSJKRjMq16AJxYsTcYFj3PLidtLIOBR5ZUaZiZPfEor4KJwQ6SxpYSz7kQjz/jyZ4FRIKwV9kWwGT3ZJ0310LZIErBBpVKLZVWQEjl6R1kUKvkyruuHTjHOHbaafpEcSXy9V2NQWUKqppCf6E7MH2Iy8LG991USdQk+zpTDfv2jaHiTkN1S+KD6msYv6oay4COkQJgSnXDQZA1ItyzP6db7JzgH//wYwVe+OJ37886/TN4Z/fFW+XTs6JW3eoFpltCDmE+V44GqsbY+U18LxwXvr2KkehGNqgpnXMXL0v2fgQIGgH+8Hnn/DEI7jgLj4g3MpSlliEP1YSwcEQ67ttmMfi/9QMp30NFeL2wmF9S3KV1bMkmad9rKBZR1DuTNKDKq7p7ZA3H3jPdGtWNZqCBvSYNSMQsG9PmOV0Z4zdNiNydE2C4Qf0f5J0vJfvkZC/U8i5eZRJ7tr/gU0FpihzK0AfywwWmrlASM8M7ASwojHTN0K/xX9g+dLG+N0Ds6xfAPxjiEtVl/dmxHANIDnzyctbfagSYMQKuXZNQLEuA3t9LK1eEaNwIUspaYtRBt76486x8zWw0eoJDTN1F3y2+/ePH4MdSdCRRHWeJFlS2KOypPExP/dbAYPNuruy4YsE8DJ2vuiJVaSs6esRSwi2Zrke4wM+jUCXprFtBkzxyGP5tHosd1Evel/2qR9W5l2IM5Kk/kSc9UDr0XenB764W2CczlflSEX/nwl995bk2nlXT3GLXDwUQ05vZj0iEbBVGnHGUg81ukTNbKBfICO5eGjOx4df1HzQih3yzHARxOqhKUZjJANlaGAToL6nzjIb+lYz3a60wAt8zeprnkA/h0kr/bVXZ4pNMnYBbjEjdj/itLvJXaLYRandnHfgIjtOvww/MOIYh5noOe0fWl4Qqr2R58Ghcap8Sd+bdDlGIlR+ahUBIhZnv/P++RvDTZffR+P1Jn072a4NWHWeMRIvgKVlPVvNOAaSlokdVfJCbsnfkR+6SKyZZmEdpMamYIH3FGux++r2W4DiFO0k8BxnUv00LKWeRLinGof8ssJJJy//vMw4v6Zo/TdBGEVKDD3w0auFzTHQABz4dlF6fDIUj+T77pxDaEeSAISzwnDZMDFEzPD1aphlaTdZ5ZsVri460ovS9UMsfeABnRbvQG4ejz4xeTMkl7IzN0gIPPas8VFGDhSegR/98J7/6/epyVThvW0UJTipg6NlXFtxKfxx+REW5qp0py+Cd5yI11pM7aHjoQY0Pw7AuvNKxfzYKioRqxeprXSNa9Y/b5nYhBxZz4cYRMcWvMAWFv1uE+pQXJbVbo2xwWKBmG+o9LD6VBWU+VhIzW4CQINSCfU0OimBGZ2gQabHHwU5dpoqSv9C9kpdt4OkzC78pfuy5cczIrfmEr2yRHsB2RecQBfj9DyuhkUzLQJCTa/7ldg12Yg8gSzrOL2K+NcioaG0A37bGB19kxVxQrr+v0NoUkgiJRJVnd4zxZZ5e5srz+oTdckJhY8WFQMLp0AuRs2er82S6xHfakTGyi4iibdvc58FDufluJf1tTlWNFRTwoV/BsoFQFNwG0mN0lWPjohgiVyCRHPiwlb1Cogojs42sOJyswGTsdI7PIDV6sd4foHUyIxHn88vmlnT2oE/iG8lFt2+BA/md8H35ZQl8wwAuoeJEiy7QCrvXADwAVdlpzFYvjn7VX1conom7x/0ktQFYY/RPlSIoHr716TEqEckTazlOw9SzvMGP1YvPbDB9XpnkodFhB/zjQbJBHf1Ty8pocGXJung86o/QgpdSFieZuG7xSQTbleaM4/A8R/jSNAGS2dJa/CAT08l4J8bbgexgg1sRI/oY9ETQ8AWYysoP28eS34tpovvayOaWPSKmDL7BMiEiyGJMxbv3VTb2SRmYYefhYBnphVzO9tH2+b9PF0MqGDtE5ocEMe3MTITumaH4D2LUlooemcLPmqkToP1ybx4A/CPbS/I13wgdGNSg4PdiMeE2SEBBb2mvO9QLgevxHHnk0HHpwLcCHY9j6VVHd3d4I/4nXz7iAuqhYzQDJBkd7PgQkbpEySFwPbR5QJgNs/C9l36yZI4IpKfEapvHlv3n4J1UhaDEuONVIiR+TuHEkaS4DixghcR9CYPR1EwH6OhGFmv71uLmEydLKibUep6R9UpTeEgEHEdd/pilWNKEhv77amlWQO47WrthVaZXzAVyOJKKhQDXY6s9SypTihErYX9fLkNVJW0R5WXWDOUis4xzRM0Ly1/7SusMSLMxj/QjhH7VXojTkgoAc5kz2cz979V74ussA7pLEdzkk8vCEoOhZGX71y2GNlD7TNKoXesG+EYKuRll8AhILMwnc8PfXfNquwmpXJ+S1BbtZkywG6PZ5DpNrlFKx9IPTmMPOeCYRSaFEX9tPDZBu0Pmhv9bscVASx4ZzPoTt7KLFv2qM2v0W7gTtnsryEkbrzeuLZ5c58NIteaAfwlBjKH08n4Bgwe/eR7rFMPqKoU9hLBQtLJVVm0hxdYD0p17v7OYKLlTuZFLrWqHSeRIqhdx+ER5K/T3HsPw3MPg0Ll3pigtquHsdInOWm1aApM3vwm8JgpGk2AN4cs4uOqImivf8fdiQ/PXmWTUz5Vwof/Piblg8jqVYIJgqVpQUAtUpD+MWKi0lF7isdluW34b7F4OFwJ7iIzwToTA9rnuxCzYlcP+61fYg4VQug/HwkmC7LIk=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>NOIP2018</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>倍增</tag>
        <tag>NOIP</tag>
      </tags>
  </entry>
  <entry>
    <title>The Renovation of The Blog</title>
    <url>/posts/About-The-Renovation-of-Blog/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此博客已翻新完毕于2019.10.27,旧文档尚未就位,博客优化进程终止</p>
<a id="more"></a>
<hr>
<h1 id="Site-Updates"><a href="#Site-Updates" class="headerlink" title="Site Updates"></a>Site Updates</h1><h2 id="2020-1"><a href="#2020-1" class="headerlink" title="2020.1"></a>2020.1</h2><blockquote>
<p>Comment system has changed: ‘LiveRe’  -&gt; ‘Valine’</p>
<p>恢复部分旧文章</p>
</blockquote>
]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>我</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]SSOIER1726_矩阵</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0--%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h1><p>设第$i$行总共统一加了$Add1[i]$,第$j$列总共统一加了$Add2[j]$</p>
<p>则对于格子$[i][j]$,其值为$Add1[i]+Add2[j]$</p>
<p>于是对于每一组限制$(x,y,c)$,有$Add1[x]+Add2[y]=c$</p>
<p>差分约束的关系式是$x-y\leq or\geq c$怎么办,那么<strong>强行</strong>设$FAdd2[y]=-Add2[y]</p>
<p>于是对于每一组限制$(x,y,c)$,有$Add1[x]-FAdd2[y]=c$$</p>
<p>即$Add1[x]-FAdd2[y]\geq c\\FAdd2[y]-Add1[x]\geq -c$</p>
<p>DFS_SPFA判环即可</p>
<a id="more"></a>
<h1 id="DEBUG"><a href="#DEBUG" class="headerlink" title="DEBUG"></a>DEBUG</h1><p>又忘了$InStack[i]=0$QwQ<br>清空图时又忘了$SCount=0$QwQ<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> N,M,K;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2e3</span>+<span class="number">10</span>,MAXM=<span class="number">4e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM],STo[MAXM],SDis[MAXM],SCount;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],InStack[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(InStack[x])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	InStack[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[x];i;i=SNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=STo[i];</span><br><span class="line">		<span class="keyword">if</span>(Dis[v]&lt;Dis[x]+SDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[v]=SDis[i]+Dis[x];</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(v))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	InStack[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> _main()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">memset</span>(SHd,<span class="number">0</span>,<span class="keyword">sizeof</span>(SHd));</span><br><span class="line">	<span class="built_in">memset</span>(Vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(Vis));</span><br><span class="line">	<span class="built_in">memset</span>(InStack,<span class="number">0</span>,<span class="keyword">sizeof</span>(InStack));</span><br><span class="line">	SCount=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;M,&amp;K) ;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;c);</span><br><span class="line">		AddEdge(y+N,x,c);</span><br><span class="line">		AddEdge(x,y+N,-c);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N+M;i++)<span class="keyword">if</span>(!Vis[i])</span><br><span class="line">	&#123;</span><br><span class="line">		Dis[i]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)_main();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]SSOIER1725账本核算</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%B4%A6%E6%9C%AC%E6%A0%B8%E7%AE%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h1><p>差分约束</p>
<p>设前$i$月总收入为$S[i]$</p>
<p>则对于每一组($x,y,w$),有$S[y]-S[x-1]=w$</p>
<p>即关系式为</p>
<script type="math/tex; mode=display">
\color{red}S[y]-S[x-1]\geq w\\
S[y]-S[x-1]\leq w,即\color{red}s[x-1]-s[y]\geq -w</script><a id="more"></a>
<p>然而诡异的时说好的$N,M\leq100$然而却RE(IN SSOIER.com)</p>
<p>随手开到$1e3$而AC</p>
<p><del>当然也有可能是我太弱了</del></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1000</span>+<span class="number">10</span>,MAXM=<span class="number">2000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM],STo[MAXM],SDis[MAXM],SCount;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> InStack[MAXN],Vis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(InStack[x])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	InStack[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[x];i!=<span class="number">-1</span>;i=SNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=STo[i];</span><br><span class="line">		<span class="keyword">if</span>(Dis[v]&lt;(ll)Dis[x]+SDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[v]=(ll)Dis[x]+SDis[i];</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(v))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	InStack[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">memset</span>(SHd,<span class="number">-1</span>,<span class="keyword">sizeof</span>(SHd));</span><br><span class="line">		SCount=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">		<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">		<span class="built_in">memset</span>(Vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(Vis));</span><br><span class="line">		<span class="built_in">memset</span>(InStack,<span class="number">0</span>,<span class="keyword">sizeof</span>(InStack));</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> X,Y,W;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;X,&amp;Y,&amp;W);</span><br><span class="line">			AddEdge(X<span class="number">-1</span>,Y,W),AddEdge(Y,X<span class="number">-1</span>,-W);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)<span class="keyword">if</span>(!InStack[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[i]=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"false"</span>);</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"true"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)Work();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]P1993小k的农场</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%B0%8Fk%E7%9A%84%E5%86%9C%E5%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>差分约束判环,<a href="https://www.luogu.com.cn/problem/P1993" target="_blank" rel="noopener">洛谷地址</a></p>
<a id="more"></a>
<p>设$D[i]$表示第$i$个的农作物数量,则关系式</p>
<script type="math/tex; mode=display">
D[a]-D[b]\geq c\\
D[a]-D[b]\leq c,即D[b]-D[a]\geq -c\\
D[a]-D[b]=0,即D[a]-D[b]\geq 0\&\&D[b]-D[a]\geq 0</script><p>然BFS_SPFA炸了,于是DFS_SPFA<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>,MAXM=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM*<span class="number">2</span>],SDis[MAXM*<span class="number">2</span>],STo[MAXM*<span class="number">2</span>],SCount;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],VisCount[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	SDis[SCount]=dis,STo[SCount]=to;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	VisCount[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(Vis[x])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[x];i;i=SNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=STo[i];</span><br><span class="line">		<span class="keyword">if</span>(Dis[v]&lt;Dis[x]+SDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[v]=Dis[x]+SDis[i];</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(v))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	Vis[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BFS_SPFA</span><span class="params">(<span class="keyword">int</span> Start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">	Q.push(Start);</span><br><span class="line">	Dis[Start]=<span class="number">0</span>;Vis[Start]=VisCount[Start]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> v=STo[i];</span><br><span class="line">			<span class="keyword">if</span>(Dis[v]&lt;Dis[u]+SDis[i])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[v]=Dis[u]+SDis[i];</span><br><span class="line">				<span class="keyword">if</span>(Vis[v])<span class="keyword">continue</span>;</span><br><span class="line">				<span class="keyword">if</span>(++VisCount[v]&gt;N+<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				Q.push(v);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> order,a,b,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;order,&amp;a,&amp;b);</span><br><span class="line">		<span class="keyword">switch</span>(order)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">				AddEdge(b,a,c);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">				AddEdge(a,b,-c);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">				AddEdge(a,b,<span class="number">0</span>),AddEdge(b,a,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0Xc0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)<span class="keyword">if</span>(!VisCount[i])<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]LOJ10090_布局</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>差分约束</p>
<p>条件:($P[i]$为第$i$头奶牛位置)</p>
<script type="math/tex; mode=display">
P[B]-P[A]\leq D\\
P[A]-P[B]\leq -D\\
P[i-1]-P[i]\leq 0\\</script><p>求最短路即可,若SPFA(1)时访问不到N,则输出-2;若负环则输出-1.<br><a id="more"></a><br><del>SPFA忘了Vis[u]=0这一句,结果调试了2个小时QwQ,于是乎又双叒叕证明了信息学学习准则草案的无比正确性</del><br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> N,ML,MD;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e3</span>+<span class="number">10</span>,MAXM=<span class="number">3e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM] ,STo[MAXM],SDis[MAXM],SCount;</span><br><span class="line">ll Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],VisCount[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	SDis[SCount]=dis,STo[SCount]=to;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">	Q.push(start);</span><br><span class="line">	Dis[start]=<span class="number">0</span>,Vis[start]=VisCount[start]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> v=STo[i];</span><br><span class="line">			<span class="keyword">if</span>(Dis[v]&gt;SDis[i]+Dis[u])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[v]=SDis[i]+Dis[u];</span><br><span class="line">				<span class="keyword">if</span>(Vis[v])<span class="keyword">continue</span>;</span><br><span class="line">				VisCount[v]++;</span><br><span class="line">				<span class="keyword">if</span>(VisCount[v]&gt;N+<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				Q.push(v),Vis[v]=<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		Vis[u]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ABS</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;ML,&amp;MD);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ML;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> A,B,D;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;A,&amp;B,&amp;D);</span><br><span class="line">		AddEdge(A,B,D);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MD;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> A,B,D;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;A,&amp;B,&amp;D);</span><br><span class="line">		AddEdge(B,A,-D);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)AddEdge(i,i<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">bool</span> Flag;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0x7f</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">if</span>(!SPFA(<span class="number">1</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		Flag=VisCount[N]&gt;<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)<span class="keyword">if</span>(!VisCount[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(i))&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(Flag)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Dis[N]-Dis[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"-2"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>```</p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]LOJ10089_糖果</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%B3%96%E6%9E%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="模型构造"><a href="#模型构造" class="headerlink" title="模型构造"></a>模型构造</h1><p>差分约束</p>
<p>设$Dis[i]$为编号为$i$的小朋友的获得糖果数</p>
<p>则</p>
<script type="math/tex; mode=display">
X=1:\ D[A]-D[B]\geq 0,D[B]-D[A] \geq 0\\
X=2:\ D[A]-D[B]\geq 1\\
X=3:\ D[A]-D[B] \geq 0\\
X=4:\ D[A]-D[B]\geq1\\
X=5:\ D[B]-D[A]\geq 0</script><p>有正环则无解</p>
<p>由于图不一定联通,每次以一个未访问结点$start$为起点SPFA</p>
<p>因为每个小朋友至少要有1颗糖,$Dis[start]=1$</p>
<h1 id="模型修正1"><a href="#模型修正1" class="headerlink" title="模型修正1"></a>模型修正1</h1><p>答案可能超过int_MAX,开long long</p>
<h1 id="模型修正2"><a href="#模型修正2" class="headerlink" title="模型修正2"></a>模型修正2</h1><p>加入特判,当$(X==2 ||X==3)\&amp;\&amp;(A==B)$时非法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N,K;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>,MAXK=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXK*<span class="number">2</span>],STo[MAXK*<span class="number">2</span>],SDis[MAXK*<span class="number">2</span>],SCount;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],VisCount[MAXN];</span><br><span class="line">ll Dis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> Start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">	Dis[Start]=<span class="number">1</span>;Vis[Start]=VisCount[Start]=<span class="number">1</span>;</span><br><span class="line">	Q.push(Start);</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(Dis[STo[i]]&lt;(ll)SDis[i]+Dis[u])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[STo[i]]=(ll)SDis[i]+Dis[u];</span><br><span class="line">				<span class="keyword">if</span>(Vis[STo[i]])<span class="keyword">continue</span>;</span><br><span class="line">				VisCount[STo[i]]++;</span><br><span class="line">				<span class="keyword">if</span>(VisCount[STo[i]]&gt;N+<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				Q.push(STo[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		Vis[u]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;K);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> X,A,B;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;X,&amp;A,&amp;B);</span><br><span class="line">		<span class="keyword">switch</span>(X)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">				AddEdge(B,A,<span class="number">0</span>),AddEdge(A,B,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">				<span class="keyword">if</span>(A==B)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">"-1"</span>) ;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				AddEdge(A,B,<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">				AddEdge(B,A,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">				<span class="keyword">if</span>(A==B)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">"-1"</span>) ;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				AddEdge(B,A,<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line">				AddEdge(A,B,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)<span class="keyword">if</span>(!VisCount[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ll Ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		Ans+=Dis[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]LOJ10088_收纳员问题</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%94%B6%E7%BA%B3%E5%91%98%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><del>本文思路依旧照搬一本通</del></p>
<p>差分约束<br><a id="more"></a><br>设$num[i]$为$i$时刻申请开始工作的人数,$x[i]$为$i$时刻实际开始工作的人数则$x[i]\leq num[i]$,$r[i]$表示$i$时刻需要有多少人工作</p>
<p>设</p>
<script type="math/tex; mode=display">
s[i]=\sum_{j=1}^ix[i]</script><p>则$i$时刻工作的总人数为$s[i]-s[i-8]$</p>
<p>故知</p>
<script type="math/tex; mode=display">
s[i]-s[i-8]\geq r[i](i\in[8,23])\\
Especially,s[23]+s[i]-s[i+16]\geq r[i](i\in [0,7])\\
0\leq s[i]-s[i-1]\leq num[i](i\in [1,23])\\
\color{green}{Especially,0\leq s[0]-s[23]\leq num[0]}\\</script><p>则</p>
<script type="math/tex; mode=display">
s[i]-s[i-8]\geq r[i](i\in[8,23])\\
\color{red}{s[i]-s[i+16]\geq r[i]-s[23](i\in [0,7])}\\
s[i]-s[i-1]\geq 0(i\in[0,23])\\
s[i-1]-s[i]\geq -num[i](i\in[0,23])\\
\color{green}{s[0]-s[23]\geq 0\\
s[23]-s[0]\geq -num[0]\\}</script><p><strong>20190817更正</strong></p>
<p><strong>绿色关系式是错误的,不应加入差分系统(因为$S[0]\not\geq S[23]$)</strong></p>
<p>红色关系式中,有三个未知量,则枚举$s[23]$可能的值,可行时输出最小值即可</p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>LOJ10087_Intervals</title>
    <url>/posts/LOJ10087-Intervals/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>差分约束,其约束条件:<br>$S[b]-S[a-1]\geq c$</p>
<p>$S[i]-S[i-1]\geq 0$</p>
<p>$S[i]-S[i-1]\leq 1,即S[i-1]-S[i]\geq -1$</p>
<p>代码如下<br><a id="more"></a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[(<span class="keyword">int</span>)<span class="number">5e4</span>+<span class="number">10</span>],SNxt[(<span class="keyword">int</span>)<span class="number">1e5</span>+MAXN],STo[(<span class="keyword">int</span>)<span class="number">1e5</span>+MAXN],SDis[(<span class="keyword">int</span>)<span class="number">1e5</span>+MAXN],SCount;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SNxt[++SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> Minn,Maxx;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line"><span class="keyword">int</span> Dis[MAXN],Vis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Q.push(x);</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	Dis[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i!=<span class="number">-1</span>;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(Dis[u]+SDis[i]&gt;Dis[STo[i]])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[STo[i]]=Dis[u]+SDis[i];</span><br><span class="line">				<span class="keyword">if</span>(!Vis[STo[i]])</span><br><span class="line">				&#123;</span><br><span class="line">					Vis[STo[i]]=<span class="number">1</span>;</span><br><span class="line">					Q.push(STo[i]);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		Vis[u]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">memset</span>(SHd,<span class="number">-1</span>,<span class="keyword">sizeof</span>(SHd)) ;</span><br><span class="line">	<span class="built_in">memset</span>(SNxt,<span class="number">-1</span>,<span class="keyword">sizeof</span>(SNxt));</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123; </span><br><span class="line">		<span class="keyword">int</span> a,b,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">		AddEdge(a,b+<span class="number">1</span>,c);</span><br><span class="line">		Minn=<span class="built_in">std</span>::min(Minn,a),Maxx=<span class="built_in">std</span>::max(Maxx,b+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Minn;i&lt;=Maxx;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		AddEdge(i,i+<span class="number">1</span>,<span class="number">0</span>),AddEdge(i+<span class="number">1</span>,i,<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	SPFA(Minn);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Dis[Maxx]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>P1273有线电视网之题解</title>
    <url>/posts/P1273%E6%9C%89%E7%BA%BF%E7%94%B5%E8%A7%86%E7%BD%91%E4%B9%8B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>原题地址[<a href="https://www.luogu.org/problem/P1273" target="_blank" rel="noopener">https://www.luogu.org/problem/P1273</a>].<br>本题看上去像是普通的树上背包，然而不同的是除了考虑的范围，费用还出现了收入，于是我们对不和谐的地方进行”整编”.<br><a id="more"></a></p>
<h4 id="模拟部分"><a href="#模拟部分" class="headerlink" title="模拟部分"></a>模拟部分</h4><p>有一些用户所支付的费用，大于公司修路所用的费用，则公司盈利；然而有一些用户支付的费用不足以用来修路，就需要公司挪用一部分盈利额来补贴。我们可以把问题转化为，用盈利额，最多能帮助多少修不起路的用户看上电视。</p>
<p>这个问题的关键是盈利额是固定的（不可能存在你给修得起路的用户修路你还亏钱的情况，只能是既得到了盈利额，路又修好了）它可以递归算出:</p>
<p>首先,我们假设用户都是预付款。用户把钱交给上一级转播站（父节点）。转播站花钱把路修好。剩下的钱都累积到转播站的私有财产了。这一级别的转播站在把钱交给上一级的转播站（父节点）。上一级的转播站把路修好剩下的钱又累积进私有财产……直到我交的钱不够修路了，就把钱留在自己手里，等待上面的补贴.就这样,盈利逐级收归中央,而有一些资产在传递的过程中出现残留.</p>
<p>这个过程的伪代码如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> TMoney[MAXN];<span class="comment">//TMoney[x]代表x的资产</span></span><br><span class="line">Dfs(x)</span><br><span class="line">	<span class="keyword">if</span>(N-M&lt;x)</span><br><span class="line">		TMoney[x]=Value[x];<span class="comment">//Value为用户支付金额</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">for</span>(every E(x,v))</span><br><span class="line">		Dfs(v);</span><br><span class="line">		<span class="keyword">if</span>(TMoney[v]&gt;=E(x,v))</span><br><span class="line">			TMoney[x]+=TMoney[v]-E(x,v);</span><br></pre></td></tr></table></figure>
<h4 id="动规部分"><a href="#动规部分" class="headerlink" title="动规部分"></a>动规部分</h4><p>求出盈利额后，我们把修得起路的用户从动态规划的范围内彻底排除，然后就可以进行树上背包了.</p>
<p>设$f[x][s]$是以x结点为根的子树接受上级s元的补贴,最多能帮助多少修不起路的用户看上电视,</p>
<p>则$f[x][s]=\max\{f[v][j-E(x,v)]+f[x][s-j]\}(v\in son[i])$,这里的$E(i,v)$表示修好$(i,v)$这条边还需要补贴多少.</p>
<p>这个过程的伪代码如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Dp(x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(到了修不起路的叶子)</span><br><span class="line">        f[x][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(every E(x,v))</span><br><span class="line">	&#123;</span><br><span class="line">		Dp(v);</span><br><span class="line">		<span class="keyword">for</span>(非负整数s)<span class="comment">//范围见后文</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&gt;=E(x,v);j--)</span><br><span class="line">			&#123;</span><br><span class="line">				f[x][s]=<span class="built_in">std</span>::max(f[x][s],f[x][s-j]+f[v][j-E(x,v)]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了方便，我们在前面模拟时:如果我的资产够修路，那$上一级的资产总额+=我的资产-E(i,v),E(i,v)=0$,如果不够,就把我的资产全部用来投入修路,即$E(i,v)-=我的资产,我的资产=0$</p>
<p>还有一些问题:伪代码中s的范围应该是多少?显然不会超过总盈利额，即根节点的资产(其他节点的资产修路的时候都花光了).并且，如果$CS[i]$元能修好整个子树的路，那么大于$CS[i]$的补贴也毫无意义.</p>
<p>于是,$0\leq s\leq \min(z,TMoney[1])$</p>
<p>最后统计答案时,不要忘了加上修得起路的用户数</p>
<p>所以在前面模拟的部分，我们还需要递归求出这些值</p>
<p>代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN =<span class="number">3e3</span>+<span class="number">10</span>,MAXM=<span class="number">3e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> StarHd[MAXN],StarNxt[MAXN],StarTo[MAXN],StarDis[MAXN],StarCount;</span><br><span class="line"><span class="keyword">int</span> Value[MAXN];</span><br><span class="line"><span class="keyword">int</span> f[MAXN][<span class="number">10000</span>];</span><br><span class="line"><span class="keyword">int</span> Amazing;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG(x)\</span></span><br><span class="line">&#123;\</span><br><span class="line">	<span class="built_in">printf</span>(#x);\</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"=%d\n"</span>,x);\</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	StarCount++;</span><br><span class="line">	StarNxt[StarCount]=StarHd[from];</span><br><span class="line">	StarTo[StarCount]=to;</span><br><span class="line">	StarDis[StarCount]=dis;</span><br><span class="line">	StarHd[from]=StarCount; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N-M;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">		<span class="keyword">while</span>(k--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> a,b;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">			AddEdge(i,a,b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=N-M+<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,Value+i);</span><br><span class="line">		Amazing+=Value[i];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> TMoney[MAXN],TSum[MAXN],TFlag[MAXN];<span class="comment">//T=Treasure</span></span><br><span class="line"><span class="keyword">int</span> CS[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(N-M&lt;x)</span><br><span class="line">	&#123;</span><br><span class="line">		TMoney[x]=Value[x];</span><br><span class="line">		TSum[x]=<span class="number">1</span>;</span><br><span class="line">		<span class="comment">//CS[x]=0;Value[x];</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=StarHd[x];i;i=StarNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=StarTo[i];</span><br><span class="line">		Dfs(v);</span><br><span class="line">		CS[x]+=StarDis[i]+CS[v];</span><br><span class="line">		<span class="keyword">if</span>(TMoney[v]&gt;=StarDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			TMoney[x]+=TMoney[v]-StarDis[i];</span><br><span class="line">			TSum[x]+=TSum[v];</span><br><span class="line">			TFlag[v]=<span class="number">1</span>;</span><br><span class="line">			StarDis[i] =<span class="number">0</span>;</span><br><span class="line">			TMoney[v]=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;StarDis[i]-=TMoney[v];TMoney[v]=<span class="number">0</span>;&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dp</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CS[x]-=(!TFlag[x])?TSum[x]:<span class="number">0</span>;</span><br><span class="line">	CS[x]=<span class="built_in">std</span>::min(CS[x],TMoney[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">if</span>(N-M&lt;x)</span><br><span class="line">	&#123;</span><br><span class="line">		f[x][<span class="number">0</span>]=!TFlag[x];</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> s=TMoney[<span class="number">1</span>];s&gt;=<span class="number">0</span>;s--)f[x][s]+=(!TFlag[x])?TSum[x]:<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=StarHd[x];i;i=StarNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=StarTo[i];</span><br><span class="line">		Dp(v);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> s=CS[x];s&gt;=<span class="number">0</span>;s--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&gt;=StarDis[i];j--)</span><br><span class="line">			&#123;</span><br><span class="line">				f[x][s]=<span class="built_in">std</span>::max(f[x][s],f[x][s-j]+f[v][j-StarDis[i]]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Read();</span><br><span class="line">	Dfs(<span class="number">1</span>);</span><br><span class="line">	Dp(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> Ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=TMoney[<span class="number">1</span>];i++)</span><br><span class="line">	&#123;</span><br><span class="line">		Ans=<span class="built_in">std</span>::max(Ans,f[<span class="number">1</span>][i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>动态规划</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
</search>
