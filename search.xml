<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于关键阶段</title>
    <url>/posts/Before-Zhong-Kao/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>整合并动员一切力量，以于关键阶段保证依计划完成任务，并防止未知异常发生。</strong></p>
<blockquote>
<p>描述：大于一切的紧急情况，其余一切进程终止</p>
</blockquote>
<p><strong>该任务优先级为最高。</strong></p>
<head><meta name="generator" content="Hexo 3.9.0">
<style>
 *{box-sizing: border-box; padding: 0;margin: 0;}
.myitem{
  width: 500px;
  height: 300px;
  margin: 0 auto;
  padding: 15px;
  border:2px solid rgba(0,0,0,1);
  border-radius: 20px;
  position: relative;
  h3{
    position: absolute;
    top: -15px;
    left: 50%;
    transform: translateX(-50%);
    background: #fff;
    padding: 0 50px;
    z-index: 2;;
  }
  &:before,&:after{
    content: '';
    position: absolute;
    top: -7px;
    width: 12px;
    height: 12px;
    border-radius: 6px;
    background-color: rgba(63,174,174,1);
    z-index: 3;
  }
  &:before{
    left: 135px;
  }
  &:after{
    right: 135px
  }
}
</style>
</head>

<div class="myitem">
    <h2><p style="text-align:center"><font size="5" face="微软雅黑">关键阶段倒计时</font></p></h2>
    <p style="text-align:center"><strong><font size="5"><a id="msg">天数</a></font></strong></p>
</div>


<script>
    var showtime = function () {
        var nowtime = new Date(),  //获取当前时间
        endtime = new Date("2020/6/11");  //定义结束时间
        var lefttime = endtime.getTime() - nowtime.getTime(),  //距离结束时间的毫秒数
            leftd = Math.floor(lefttime/(1000*60*60*24)),  //计算天数
            lefth = Math.floor(lefttime/(1000*60*60)%24),  //计算小时数
            leftm = Math.floor(lefttime/(1000*60)%60),  //计算分钟数
            lefts = Math.floor(lefttime/1000%60);  //计算秒数
        var leftweek= Math.floor(leftd/7);
        if(leftd<0){
            return "倒计时已完成："+(-leftweek)+"周:"+(-leftd) + "天" + (-lefth) + "小时" + (-leftm) + "分" + (-lefts)+"秒";
        }
        if(leftd<40){
            return "仅剩"+leftweek+"周:"+leftd + "天" + lefth + "小时" + leftm + "分" + lefts+"秒\n"; 
        }
        return "共"+leftweek+"周:"+leftd + "天" + lefth + "小时" + leftm + "分" + lefts+"秒";  //返回倒计时的字符串
    }
    var div = document.getElementById("msg");
setInterval (function () {
    div.innerHTML = showtime();
}, 1000);
</script>

<a id="more"></a>]]></content>
  </entry>
  <entry>
    <title>「LCT」之总结</title>
    <url>/posts/About-LCT/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1809utsVxpSv5ivxTQBttQgNa1AJdTbqYqnW2wI+q5L1r1pytPln/93KDtqxRBzXMyBFD53H8oskrgj6te1+JmJfyWduekkPDP0A3rJodIwbZybR3ARdPYsnjbKYVwQNy63op1SfpjHmAoRe4ndwjpnZ7hdLYrAjAQkt01uphof1jKbjuhnczVhZ6PU9BHx74hmxs4epo0SYc0TseML+W5aKGxOd/wgh2reBaejm1JRiI4BNdGsU+vUJsqfpsEPGzNI8UU0G0XvxBFQONm0Dw1NQj0/asHFOcF98npjzig94t7Izx5cFDI3f0jEGcBV/U2tt2otaFOZ8LqSStqZazNgrr63Lv9UpYnChUwRyRv3uCw9cLjDT9gvJ+CNg0zbJs5skDwJOD8URMdxgCSJ8+8lYZI5htxE2g5XQyfIAOuGKE66y896K6kNQo3WS8qYyqAdeqgxsoSxj2ePLcZBkSTZ6FUawRs7MJDxGvIPc4VaPsJerEr8tWe8WKrZuq2/ZUZ2J89V+m1f2g==
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>LCT</category>
      </categories>
      <tags>
        <tag>LCT</tag>
      </tags>
  </entry>
  <entry>
    <title>「OI之数学」之总结</title>
    <url>/posts/About-Math/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1+/0WG1QI522E+2SRo4iMecU+zyZJQtPys=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>「网络流」之总结</title>
    <url>/posts/About-Network-Flows/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1/I1wErbndOMxLPyLlmcWcYDGBJWNS18yiaaEWh9c+vL4VuJAx/9+cZep53S5Mn4y3T++hfEMvlogKnJmkZ7A57iSODcUT4iiO1pkrQSoCtW+pgvfQfiOw9RgD1JeVhpbmJjrdND/aptWlOhnZ+iFJ/gjEWry8R2MKPQ6CiUH+YjF0RUzZ0Wq53qYi9d4GGl01uvELGohnNUf38CJzxvsvXVv7slMR2Sq0WicANEPK+fZXa5e92+uu/pe0/am5ZXPxYUq3KxRswz1fonWWgNF1hwWNdwQMTgM+Udhsza8HpInLefCIgEcSq/QGVu0HBn4z/iwfYmjB3ngwuEoqfrbx9QQMqqb7drHwx8Sj1IWkQy0vOgwfdHloOU2vaczK2qKtJ8svY+I66pCrIpVAdr7aYAFCTYxHB2u0tjhjItxCGXHVtJCIRCG7oZJfguf9JiZoS11LdObXNZ7FTucc836BPosFT3K36+eTt1hJsfJIII3YpaFD9WjLu8iYpQYXA+/KJ1AsvjEZIUg==
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>网络流</category>
      </categories>
      <tags>
        <tag>网络流</tag>
      </tags>
  </entry>
  <entry>
    <title>「奇怪DP」之总结</title>
    <url>/posts/About-Stange-DP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX1+1AtTvZHXocQQItGnzo3Js6Z29LHVgzDg=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]P4172水管局长</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B0%B4%E7%AE%A1%E5%B1%80%E9%95%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>LCT相关训练</category>
      </categories>
      <tags>
        <tag>LCT</tag>
        <tag>Kruskal</tag>
      </tags>
  </entry>
  <entry>
    <title>“跬步,以至千里”</title>
    <url>/posts/New-Year-2020/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>
    <div id="aplayer-ZnzZdyjV" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1427930" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
<p>这是本文章的结尾.</p>
]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>我</tag>
      </tags>
  </entry>
  <entry>
    <title>我的收藏夹</title>
    <url>/posts/My-Favorite/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>注: 为保护下述网址的知识产权,此处仅提供URL</p>
<p>又: $\%\%\%dalaos$</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>URL</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.cnblogs.com/flashhu/p/8324551.html" target="_blank" rel="noopener">https://www.cnblogs.com/flashhu/p/8324551.html</a></td>
<td>1.LCT概念</td>
</tr>
<tr>
<td><a href="https://www.cnblogs.com/flashhu/p/9498517.html" target="_blank" rel="noopener">https://www.cnblogs.com/flashhu/p/9498517.html</a></td>
<td>2.LCT应用</td>
</tr>
<tr>
<td><a href="https://www.luogu.com.cn/blog/command-block/fft-xue-xi-bi-ji" target="_blank" rel="noopener">https://www.luogu.com.cn/blog/command-block/fft-xue-xi-bi-ji</a></td>
<td>3.FFT极详讲解</td>
</tr>
<tr>
<td><a href="https://oi-wiki.org/math/poly/fft/" target="_blank" rel="noopener">https://oi-wiki.org/math/poly/fft/</a></td>
<td>4.FFT讲解2</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>工具与资源</category>
      </categories>
      <tags>
        <tag>我</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]疫情控制</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-YiQingKongZhi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>动态规划</category>
        <category>树上DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>树上DP</tag>
        <tag>二分答案</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]NOIP2018保卫王国</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-KingdomProtection/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="弗输入密码,不得视邪" />
    <label for="pass">弗输入密码,不得视邪</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
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
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>做题笔记</category>
        <category>NOIP2018</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>倍增</tag>
        <tag>NOIP</tag>
      </tags>
  </entry>
  <entry>
    <title>The Renovation of The Blog</title>
    <url>/posts/About-The-Renovation-of-Blog/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此博客已翻新完毕于2019.10.27,旧文档尚未就位,博客优化进程终止</p>
<a id="more"></a>
<hr>
<h1 id="Site-Updates"><a href="#Site-Updates" class="headerlink" title="Site Updates"></a>Site Updates</h1><h2 id="2020-1"><a href="#2020-1" class="headerlink" title="2020.1"></a>2020.1</h2><blockquote>
<p>Comment system has changed: ‘LiveRe’  -&gt; ‘Valine’</p>
<p>恢复部分旧文章</p>
</blockquote>
]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>我</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]SSOIER1726_矩阵</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0--%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h1><p>设第$i$行总共统一加了$Add1[i]$,第$j$列总共统一加了$Add2[j]$</p>
<p>则对于格子$[i][j]$,其值为$Add1[i]+Add2[j]$</p>
<p>于是对于每一组限制$(x,y,c)$,有$Add1[x]+Add2[y]=c$</p>
<p>差分约束的关系式是$x-y\leq or\geq c$怎么办,那么<strong>强行</strong>设$FAdd2[y]=-Add2[y]</p>
<p>于是对于每一组限制$(x,y,c)$,有$Add1[x]-FAdd2[y]=c$$</p>
<p>即$Add1[x]-FAdd2[y]\geq c\\FAdd2[y]-Add1[x]\geq -c$</p>
<p>DFS_SPFA判环即可</p>
<a id="more"></a>
<h1 id="DEBUG"><a href="#DEBUG" class="headerlink" title="DEBUG"></a>DEBUG</h1><p>又忘了$InStack[i]=0$QwQ<br>清空图时又忘了$SCount=0$QwQ<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> N,M,K;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2e3</span>+<span class="number">10</span>,MAXM=<span class="number">4e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM],STo[MAXM],SDis[MAXM],SCount;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],InStack[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(InStack[x])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	InStack[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[x];i;i=SNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=STo[i];</span><br><span class="line">		<span class="keyword">if</span>(Dis[v]&lt;Dis[x]+SDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[v]=SDis[i]+Dis[x];</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(v))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	InStack[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> _main()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">memset</span>(SHd,<span class="number">0</span>,<span class="keyword">sizeof</span>(SHd));</span><br><span class="line">	<span class="built_in">memset</span>(Vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(Vis));</span><br><span class="line">	<span class="built_in">memset</span>(InStack,<span class="number">0</span>,<span class="keyword">sizeof</span>(InStack));</span><br><span class="line">	SCount=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;M,&amp;K) ;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;c);</span><br><span class="line">		AddEdge(y+N,x,c);</span><br><span class="line">		AddEdge(x,y+N,-c);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N+M;i++)<span class="keyword">if</span>(!Vis[i])</span><br><span class="line">	&#123;</span><br><span class="line">		Dis[i]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)_main();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]SSOIER1725账本核算</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%B4%A6%E6%9C%AC%E6%A0%B8%E7%AE%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h1><p>差分约束</p>
<p>设前$i$月总收入为$S[i]$</p>
<p>则对于每一组($x,y,w$),有$S[y]-S[x-1]=w$</p>
<p>即关系式为</p>
<script type="math/tex; mode=display">
\color{red}S[y]-S[x-1]\geq w\\
S[y]-S[x-1]\leq w,即\color{red}s[x-1]-s[y]\geq -w</script><a id="more"></a>
<p>然而诡异的时说好的$N,M\leq100$然而却RE(IN SSOIER.com)</p>
<p>随手开到$1e3$而AC</p>
<p><del>当然也有可能是我太弱了</del></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1000</span>+<span class="number">10</span>,MAXM=<span class="number">2000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM],STo[MAXM],SDis[MAXM],SCount;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> InStack[MAXN],Vis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(InStack[x])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	InStack[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[x];i!=<span class="number">-1</span>;i=SNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=STo[i];</span><br><span class="line">		<span class="keyword">if</span>(Dis[v]&lt;(ll)Dis[x]+SDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[v]=(ll)Dis[x]+SDis[i];</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(v))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	InStack[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">memset</span>(SHd,<span class="number">-1</span>,<span class="keyword">sizeof</span>(SHd));</span><br><span class="line">		SCount=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">		<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">		<span class="built_in">memset</span>(Vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(Vis));</span><br><span class="line">		<span class="built_in">memset</span>(InStack,<span class="number">0</span>,<span class="keyword">sizeof</span>(InStack));</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> X,Y,W;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;X,&amp;Y,&amp;W);</span><br><span class="line">			AddEdge(X<span class="number">-1</span>,Y,W),AddEdge(Y,X<span class="number">-1</span>,-W);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)<span class="keyword">if</span>(!InStack[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[i]=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"false"</span>);</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"true"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)Work();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]P1993小k的农场</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%B0%8Fk%E7%9A%84%E5%86%9C%E5%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>差分约束判环,<a href="https://www.luogu.com.cn/problem/P1993" target="_blank" rel="noopener">洛谷地址</a></p>
<a id="more"></a>
<p>设$D[i]$表示第$i$个的农作物数量,则关系式</p>
<script type="math/tex; mode=display">
D[a]-D[b]\geq c\\
D[a]-D[b]\leq c,即D[b]-D[a]\geq -c\\
D[a]-D[b]=0,即D[a]-D[b]\geq 0\&\&D[b]-D[a]\geq 0</script><p>然BFS_SPFA炸了,于是DFS_SPFA<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>,MAXM=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM*<span class="number">2</span>],SDis[MAXM*<span class="number">2</span>],STo[MAXM*<span class="number">2</span>],SCount;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],VisCount[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	SDis[SCount]=dis,STo[SCount]=to;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	VisCount[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(Vis[x])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[x];i;i=SNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=STo[i];</span><br><span class="line">		<span class="keyword">if</span>(Dis[v]&lt;Dis[x]+SDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			Dis[v]=Dis[x]+SDis[i];</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(v))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	Vis[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BFS_SPFA</span><span class="params">(<span class="keyword">int</span> Start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">	Q.push(Start);</span><br><span class="line">	Dis[Start]=<span class="number">0</span>;Vis[Start]=VisCount[Start]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> v=STo[i];</span><br><span class="line">			<span class="keyword">if</span>(Dis[v]&lt;Dis[u]+SDis[i])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[v]=Dis[u]+SDis[i];</span><br><span class="line">				<span class="keyword">if</span>(Vis[v])<span class="keyword">continue</span>;</span><br><span class="line">				<span class="keyword">if</span>(++VisCount[v]&gt;N+<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				Q.push(v);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> order,a,b,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;order,&amp;a,&amp;b);</span><br><span class="line">		<span class="keyword">switch</span>(order)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">				AddEdge(b,a,c);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;c);</span><br><span class="line">				AddEdge(a,b,-c);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">				AddEdge(a,b,<span class="number">0</span>),AddEdge(b,a,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0Xc0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)<span class="keyword">if</span>(!VisCount[i])<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]LOJ10090_布局</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>差分约束</p>
<p>条件:($P[i]$为第$i$头奶牛位置)</p>
<script type="math/tex; mode=display">
P[B]-P[A]\leq D\\
P[A]-P[B]\leq -D\\
P[i-1]-P[i]\leq 0\\</script><p>求最短路即可,若SPFA(1)时访问不到N,则输出-2;若负环则输出-1.<br><a id="more"></a><br><del>SPFA忘了Vis[u]=0这一句,结果调试了2个小时QwQ,于是乎又双叒叕证明了信息学学习准则草案的无比正确性</del><br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> N,ML,MD;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e3</span>+<span class="number">10</span>,MAXM=<span class="number">3e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXM] ,STo[MAXM],SDis[MAXM],SCount;</span><br><span class="line">ll Dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],VisCount[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	SDis[SCount]=dis,STo[SCount]=to;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">	Q.push(start);</span><br><span class="line">	Dis[start]=<span class="number">0</span>,Vis[start]=VisCount[start]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> v=STo[i];</span><br><span class="line">			<span class="keyword">if</span>(Dis[v]&gt;SDis[i]+Dis[u])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[v]=SDis[i]+Dis[u];</span><br><span class="line">				<span class="keyword">if</span>(Vis[v])<span class="keyword">continue</span>;</span><br><span class="line">				VisCount[v]++;</span><br><span class="line">				<span class="keyword">if</span>(VisCount[v]&gt;N+<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				Q.push(v),Vis[v]=<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		Vis[u]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ABS</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">0</span>)<span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;ML,&amp;MD);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ML;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> A,B,D;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;A,&amp;B,&amp;D);</span><br><span class="line">		AddEdge(A,B,D);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MD;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> A,B,D;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;A,&amp;B,&amp;D);</span><br><span class="line">		AddEdge(B,A,-D);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)AddEdge(i,i<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">bool</span> Flag;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0x7f</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">if</span>(!SPFA(<span class="number">1</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		Flag=VisCount[N]&gt;<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)<span class="keyword">if</span>(!VisCount[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!SPFA(i))&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(Flag)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Dis[N]-Dis[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"-2"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>```</p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]LOJ10089_糖果</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%B3%96%E6%9E%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="模型构造"><a href="#模型构造" class="headerlink" title="模型构造"></a>模型构造</h1><p>差分约束</p>
<p>设$Dis[i]$为编号为$i$的小朋友的获得糖果数</p>
<p>则</p>
<script type="math/tex; mode=display">
X=1:\ D[A]-D[B]\geq 0,D[B]-D[A] \geq 0\\
X=2:\ D[A]-D[B]\geq 1\\
X=3:\ D[A]-D[B] \geq 0\\
X=4:\ D[A]-D[B]\geq1\\
X=5:\ D[B]-D[A]\geq 0</script><p>有正环则无解</p>
<p>由于图不一定联通,每次以一个未访问结点$start$为起点SPFA</p>
<p>因为每个小朋友至少要有1颗糖,$Dis[start]=1$</p>
<h1 id="模型修正1"><a href="#模型修正1" class="headerlink" title="模型修正1"></a>模型修正1</h1><p>答案可能超过int_MAX,开long long</p>
<h1 id="模型修正2"><a href="#模型修正2" class="headerlink" title="模型修正2"></a>模型修正2</h1><p>加入特判,当$(X==2 ||X==3)\&amp;\&amp;(A==B)$时非法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N,K;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>,MAXK=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[MAXN],SNxt[MAXK*<span class="number">2</span>],STo[MAXK*<span class="number">2</span>],SDis[MAXK*<span class="number">2</span>],SCount;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SCount++;</span><br><span class="line">	SNxt[SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> Vis[MAXN],VisCount[MAXN];</span><br><span class="line">ll Dis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> Start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">	Dis[Start]=<span class="number">1</span>;Vis[Start]=VisCount[Start]=<span class="number">1</span>;</span><br><span class="line">	Q.push(Start);</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(Dis[STo[i]]&lt;(ll)SDis[i]+Dis[u])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[STo[i]]=(ll)SDis[i]+Dis[u];</span><br><span class="line">				<span class="keyword">if</span>(Vis[STo[i]])<span class="keyword">continue</span>;</span><br><span class="line">				VisCount[STo[i]]++;</span><br><span class="line">				<span class="keyword">if</span>(VisCount[STo[i]]&gt;N+<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				Q.push(STo[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		Vis[u]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;K);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> X,A,B;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;X,&amp;A,&amp;B);</span><br><span class="line">		<span class="keyword">switch</span>(X)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">				AddEdge(B,A,<span class="number">0</span>),AddEdge(A,B,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">				<span class="keyword">if</span>(A==B)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">"-1"</span>) ;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				AddEdge(A,B,<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">				AddEdge(B,A,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">				<span class="keyword">if</span>(A==B)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">"-1"</span>) ;</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				AddEdge(B,A,<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line">				AddEdge(A,B,<span class="number">0</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)<span class="keyword">if</span>(!VisCount[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(!SPFA(i))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ll Ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		Ans+=Dis[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>[做题笔记]LOJ10088_收纳员问题</title>
    <url>/posts/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%94%B6%E7%BA%B3%E5%91%98%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><del>本文思路依旧照搬一本通</del></p>
<p>差分约束<br><a id="more"></a><br>设$num[i]$为$i$时刻申请开始工作的人数,$x[i]$为$i$时刻实际开始工作的人数则$x[i]\leq num[i]$,$r[i]$表示$i$时刻需要有多少人工作</p>
<p>设</p>
<script type="math/tex; mode=display">
s[i]=\sum_{j=1}^ix[i]</script><p>则$i$时刻工作的总人数为$s[i]-s[i-8]$</p>
<p>故知</p>
<script type="math/tex; mode=display">
s[i]-s[i-8]\geq r[i](i\in[8,23])\\
Especially,s[23]+s[i]-s[i+16]\geq r[i](i\in [0,7])\\
0\leq s[i]-s[i-1]\leq num[i](i\in [1,23])\\
\color{green}{Especially,0\leq s[0]-s[23]\leq num[0]}\\</script><p>则</p>
<script type="math/tex; mode=display">
s[i]-s[i-8]\geq r[i](i\in[8,23])\\
\color{red}{s[i]-s[i+16]\geq r[i]-s[23](i\in [0,7])}\\
s[i]-s[i-1]\geq 0(i\in[0,23])\\
s[i-1]-s[i]\geq -num[i](i\in[0,23])\\
\color{green}{s[0]-s[23]\geq 0\\
s[23]-s[0]\geq -num[0]\\}</script><p><strong>20190817更正</strong></p>
<p><strong>绿色关系式是错误的,不应加入差分系统(因为$S[0]\not\geq S[23]$)</strong></p>
<p>红色关系式中,有三个未知量,则枚举$s[23]$可能的值,可行时输出最小值即可</p>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>LOJ10087_Intervals</title>
    <url>/posts/LOJ10087-Intervals/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>差分约束,其约束条件:<br>$S[b]-S[a-1]\geq c$</p>
<p>$S[i]-S[i-1]\geq 0$</p>
<p>$S[i]-S[i-1]\leq 1,即S[i-1]-S[i]\geq -1$</p>
<p>代码如下<br><a id="more"></a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> SHd[(<span class="keyword">int</span>)<span class="number">5e4</span>+<span class="number">10</span>],SNxt[(<span class="keyword">int</span>)<span class="number">1e5</span>+MAXN],STo[(<span class="keyword">int</span>)<span class="number">1e5</span>+MAXN],SDis[(<span class="keyword">int</span>)<span class="number">1e5</span>+MAXN],SCount;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SNxt[++SCount]=SHd[from];</span><br><span class="line">	STo[SCount]=to,SDis[SCount]=dis;</span><br><span class="line">	SHd[from]=SCount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> Minn,Maxx;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line"><span class="keyword">int</span> Dis[MAXN],Vis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Q.push(x);</span><br><span class="line">	Vis[x]=<span class="number">1</span>;</span><br><span class="line">	Dis[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(!Q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> u=Q.front();</span><br><span class="line">		Q.pop();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=SHd[u];i!=<span class="number">-1</span>;i=SNxt[i])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(Dis[u]+SDis[i]&gt;Dis[STo[i]])</span><br><span class="line">			&#123;</span><br><span class="line">				Dis[STo[i]]=Dis[u]+SDis[i];</span><br><span class="line">				<span class="keyword">if</span>(!Vis[STo[i]])</span><br><span class="line">				&#123;</span><br><span class="line">					Vis[STo[i]]=<span class="number">1</span>;</span><br><span class="line">					Q.push(STo[i]);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		Vis[u]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">memset</span>(SHd,<span class="number">-1</span>,<span class="keyword">sizeof</span>(SHd)) ;</span><br><span class="line">	<span class="built_in">memset</span>(SNxt,<span class="number">-1</span>,<span class="keyword">sizeof</span>(SNxt));</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123; </span><br><span class="line">		<span class="keyword">int</span> a,b,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">		AddEdge(a,b+<span class="number">1</span>,c);</span><br><span class="line">		Minn=<span class="built_in">std</span>::min(Minn,a),Maxx=<span class="built_in">std</span>::max(Maxx,b+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(Dis,<span class="number">0xC0</span>,<span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Minn;i&lt;=Maxx;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		AddEdge(i,i+<span class="number">1</span>,<span class="number">0</span>),AddEdge(i+<span class="number">1</span>,i,<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	SPFA(Minn);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Dis[Maxx]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>图论</category>
        <category>差分约束</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>差分约束</tag>
      </tags>
  </entry>
  <entry>
    <title>P1273有线电视网之题解</title>
    <url>/posts/P1273%E6%9C%89%E7%BA%BF%E7%94%B5%E8%A7%86%E7%BD%91%E4%B9%8B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>原题地址[<a href="https://www.luogu.org/problem/P1273" target="_blank" rel="noopener">https://www.luogu.org/problem/P1273</a>].<br>本题看上去像是普通的树上背包，然而不同的是除了考虑的范围，费用还出现了收入，于是我们对不和谐的地方进行”整编”.<br><a id="more"></a></p>
<h4 id="模拟部分"><a href="#模拟部分" class="headerlink" title="模拟部分"></a>模拟部分</h4><p>有一些用户所支付的费用，大于公司修路所用的费用，则公司盈利；然而有一些用户支付的费用不足以用来修路，就需要公司挪用一部分盈利额来补贴。我们可以把问题转化为，用盈利额，最多能帮助多少修不起路的用户看上电视。</p>
<p>这个问题的关键是盈利额是固定的（不可能存在你给修得起路的用户修路你还亏钱的情况，只能是既得到了盈利额，路又修好了）它可以递归算出:</p>
<p>首先,我们假设用户都是预付款。用户把钱交给上一级转播站（父节点）。转播站花钱把路修好。剩下的钱都累积到转播站的私有财产了。这一级别的转播站在把钱交给上一级的转播站（父节点）。上一级的转播站把路修好剩下的钱又累积进私有财产……直到我交的钱不够修路了，就把钱留在自己手里，等待上面的补贴.就这样,盈利逐级收归中央,而有一些资产在传递的过程中出现残留.</p>
<p>这个过程的伪代码如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> TMoney[MAXN];<span class="comment">//TMoney[x]代表x的资产</span></span><br><span class="line">Dfs(x)</span><br><span class="line">	<span class="keyword">if</span>(N-M&lt;x)</span><br><span class="line">		TMoney[x]=Value[x];<span class="comment">//Value为用户支付金额</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">for</span>(every E(x,v))</span><br><span class="line">		Dfs(v);</span><br><span class="line">		<span class="keyword">if</span>(TMoney[v]&gt;=E(x,v))</span><br><span class="line">			TMoney[x]+=TMoney[v]-E(x,v);</span><br></pre></td></tr></table></figure>
<h4 id="动规部分"><a href="#动规部分" class="headerlink" title="动规部分"></a>动规部分</h4><p>求出盈利额后，我们把修得起路的用户从动态规划的范围内彻底排除，然后就可以进行树上背包了.</p>
<p>设$f[x][s]$是以x结点为根的子树接受上级s元的补贴,最多能帮助多少修不起路的用户看上电视,</p>
<p>则$f[x][s]=\max\{f[v][j-E(x,v)]+f[x][s-j]\}(v\in son[i])$,这里的$E(i,v)$表示修好$(i,v)$这条边还需要补贴多少.</p>
<p>这个过程的伪代码如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Dp(x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(到了修不起路的叶子)</span><br><span class="line">        f[x][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(every E(x,v))</span><br><span class="line">	&#123;</span><br><span class="line">		Dp(v);</span><br><span class="line">		<span class="keyword">for</span>(非负整数s)<span class="comment">//范围见后文</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&gt;=E(x,v);j--)</span><br><span class="line">			&#123;</span><br><span class="line">				f[x][s]=<span class="built_in">std</span>::max(f[x][s],f[x][s-j]+f[v][j-E(x,v)]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了方便，我们在前面模拟时:如果我的资产够修路，那$上一级的资产总额+=我的资产-E(i,v),E(i,v)=0$,如果不够,就把我的资产全部用来投入修路,即$E(i,v)-=我的资产,我的资产=0$</p>
<p>还有一些问题:伪代码中s的范围应该是多少?显然不会超过总盈利额，即根节点的资产(其他节点的资产修路的时候都花光了).并且，如果$CS[i]$元能修好整个子树的路，那么大于$CS[i]$的补贴也毫无意义.</p>
<p>于是,$0\leq s\leq \min(z,TMoney[1])$</p>
<p>最后统计答案时,不要忘了加上修得起路的用户数</p>
<p>所以在前面模拟的部分，我们还需要递归求出这些值</p>
<p>代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> MAXN =<span class="number">3e3</span>+<span class="number">10</span>,MAXM=<span class="number">3e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> StarHd[MAXN],StarNxt[MAXN],StarTo[MAXN],StarDis[MAXN],StarCount;</span><br><span class="line"><span class="keyword">int</span> Value[MAXN];</span><br><span class="line"><span class="keyword">int</span> f[MAXN][<span class="number">10000</span>];</span><br><span class="line"><span class="keyword">int</span> Amazing;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG(x)\</span></span><br><span class="line">&#123;\</span><br><span class="line">	<span class="built_in">printf</span>(#x);\</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"=%d\n"</span>,x);\</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">int</span> from,<span class="keyword">int</span> to,<span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	StarCount++;</span><br><span class="line">	StarNxt[StarCount]=StarHd[from];</span><br><span class="line">	StarTo[StarCount]=to;</span><br><span class="line">	StarDis[StarCount]=dis;</span><br><span class="line">	StarHd[from]=StarCount; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N-M;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">		<span class="keyword">while</span>(k--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> a,b;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">			AddEdge(i,a,b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=N-M+<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,Value+i);</span><br><span class="line">		Amazing+=Value[i];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> TMoney[MAXN],TSum[MAXN],TFlag[MAXN];<span class="comment">//T=Treasure</span></span><br><span class="line"><span class="keyword">int</span> CS[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(N-M&lt;x)</span><br><span class="line">	&#123;</span><br><span class="line">		TMoney[x]=Value[x];</span><br><span class="line">		TSum[x]=<span class="number">1</span>;</span><br><span class="line">		<span class="comment">//CS[x]=0;Value[x];</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=StarHd[x];i;i=StarNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=StarTo[i];</span><br><span class="line">		Dfs(v);</span><br><span class="line">		CS[x]+=StarDis[i]+CS[v];</span><br><span class="line">		<span class="keyword">if</span>(TMoney[v]&gt;=StarDis[i])</span><br><span class="line">		&#123;</span><br><span class="line">			TMoney[x]+=TMoney[v]-StarDis[i];</span><br><span class="line">			TSum[x]+=TSum[v];</span><br><span class="line">			TFlag[v]=<span class="number">1</span>;</span><br><span class="line">			StarDis[i] =<span class="number">0</span>;</span><br><span class="line">			TMoney[v]=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;StarDis[i]-=TMoney[v];TMoney[v]=<span class="number">0</span>;&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dp</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CS[x]-=(!TFlag[x])?TSum[x]:<span class="number">0</span>;</span><br><span class="line">	CS[x]=<span class="built_in">std</span>::min(CS[x],TMoney[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">if</span>(N-M&lt;x)</span><br><span class="line">	&#123;</span><br><span class="line">		f[x][<span class="number">0</span>]=!TFlag[x];</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> s=TMoney[<span class="number">1</span>];s&gt;=<span class="number">0</span>;s--)f[x][s]+=(!TFlag[x])?TSum[x]:<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=StarHd[x];i;i=StarNxt[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> v=StarTo[i];</span><br><span class="line">		Dp(v);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> s=CS[x];s&gt;=<span class="number">0</span>;s--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&gt;=StarDis[i];j--)</span><br><span class="line">			&#123;</span><br><span class="line">				f[x][s]=<span class="built_in">std</span>::max(f[x][s],f[x][s-j]+f[v][j-StarDis[i]]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Read();</span><br><span class="line">	Dfs(<span class="number">1</span>);</span><br><span class="line">	Dp(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> Ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=TMoney[<span class="number">1</span>];i++)</span><br><span class="line">	&#123;</span><br><span class="line">		Ans=<span class="built_in">std</span>::max(Ans,f[<span class="number">1</span>][i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>做题笔记</category>
        <category>动态规划</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
</search>
