<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>疫情控制做题笔记</title>
    <url>/2019/11/09/PN-YiQingKongZhi/</url>
    <content><![CDATA[<!-- build time:Sat Nov 09 2019 15:35:17 GMT+0800 (GMT+08:00) --><p>题目来源:<a href="https://www.luogu.org/problem/P1084" target="_blank" rel="noopener">LUOGU</a></p><p>大意:有一颗带权树,要求从根节点到每个叶子节点路上至少一个军队(可以在叶子节点,但不能在根上),初始有点节点有军队,其可同时移动,求所有军队移动的路径长度最大值的最小值</p><a id="more"></a><!-- rebuild by neat -->]]></content>
      <categories>
        <category>做题笔记</category>
      </categories>
  </entry>
  <entry>
    <title>日志汇总</title>
    <url>/2019/11/02/CC-Main-File/</url>
    <content><![CDATA[<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="Enter the password to read the post.">
    <label for="pass">Enter the password to read the post.</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
U2FsdGVkX185JGitObAZiPCO4jWR+GVCKMxeLRw5GnKOIgCJ9JYOS1EOdKPNF5QxjbDTNkGCbFD3Ft/RD28M7QyZhLK40cEcn0pW467NUaCZfYISLM2h5OGruE/n9kn5vs6wg4mRXqU6ZSNNwhn3N+/PpAdhXQVOb+2QH3K4yXWLd0YAx03i4mJSNxsdF/AvP9S2ze1cwjoL8DqrsgoVMs6Jgav8/XCpBVVeIPq9KJhp2ZROr+lNSns05UVpr86lnMC0YN5PnMjY/3hbfHKBZf1+yyWr081tKJFmtHhX0kmsgVhzSmdlfJHcB/SySWWsdmJflkBL42aBCidQE9UBT0L88SzwknKPi9J9MwGkVLh13ubVTFisZapjDIqH9mEdciAth3TvrQm0gMjGl66QMCYqYNO07InN6CjN+1e5QP0E21GNZgOfWunGn7QJbi1xDnR1B+LdrEL6UeA8cwtdNhGTmDzTY5xsPRHex3tUYaVTz9l/y01flnx5l1+vF8OeenOOxvRvICpMVNXq83gf051CGTpGClZbrgSWlhXVG6vh+esLuU+xYzUUl6VSXQu9H/LzTKj1Jm91Vf6uTLV8B7+OBdaXgSCxqC+lOxyRX+ynE4ia3En22Dh5szDgw7+1nC5l1qpmvlKN8GqSLFQlGVWZIwh96ejgmeNXr/vMJMm4b4UzQZxo7dHaOQbx+clIpNopz8kDS7GNGST48UxbVpjlHgi4n3gZLQqDlxPJ7/O2lePzElLH3MXo194VJajurRVMrtwAc0CwvS2SFTYjkKMv8ll0TvLXGyHTimctCbyQPBo/bBv/4tZftGGfVH2N6GsXZFPjCvEiPw8Laa7eUhEuHKXY2ItHRv6mo1h2Gg/lfqr/j0X8vcGjfuiVx8F8DWeR1UpShVfh1ef41JKgza7IO+tviRrQXLXKVdY2ZY+DxYjYaTgJ00s7f2n6uZQYK0bs1N9NSU+z/lhslOMx76WJprmr6OVMEEdX9gqqK2yokxubdFFdwgIr/v1Fm44EUJCkz+W4Q6psbAsrv1cuGdljX771V0h+uZ2ho1CsQ9DjAOKU3VP7iPLFPic8oE7fIuMy9BVoerLl381iNB+hTQsfM30pFe01m4bgpqgOtxsRyfA2VBvOkcVN8iwz8laqAumGuDkdbRnkr6Y5DaLdwGSIkxSczrzqYypUaDWgSkzPXI5S+SzlBh4XFdfLv0eXEQELmt8Po11BL81xXDrpEwQRPmngevMgTdppau0Y44bspmWkH93tEp2csjR5XDXxqf3Ric1bOn9yvXXauNVGIQlc4Xo1u1b5hxH5jxih7zUXWixOifk0GxYn/b4S3ILqSB7jnwnrc+tnJMp1mdBdp+9yNSXukSjGt7tKqin8qrosQ3IzUAjpdHwK1t2+oll9z/O6afGwovHubGUlGLxteZ3qRYtbX5Bxcawpx9ahJ+13B4+VAcAHWFPfGQoefa1edWkN4vJwM3WudAhfq2EPTgxRIoKxio/Oviceeuwtp9Un+UEI/8VKJMi+rpYnhAcmUDjQ+wTtVLTHHZMEGX//7nnchiwrU40d0SdmY1dGHgIL/ytdmbdnWffjng+dD9FhllcqV09yn/OfzgG2njnE4qvG9qy8HRyu5ymJz/ftEE6yXFdWq8kOA2pldsv75IhAZpS0TtcNQA5zMlZTNUhcQFm/Wwn+ChrRNQllgMUrzDQm8oXQXbLUKiAVC9a+w7JLgxIK2j0gNEqo1bZ6DRnYVAG1lHlltLtlZinqdSqCNPUTTLg8V1lTONoawrwE2FRPpkMO58uoYGt5FFTHw/ONjvSiNLufo48ql4sLoPBwYoGLCqM/vOBfjpAa/79arqYMYbl00I1ZrdRi6NXxu78Efls/sO37Z/mlRsO1Dfo+2J3gfx9mABEhDIfO2VSOuYnkT3/OyMpkEvgiFwQ5O02jxeN0oBug1G/u582H60wJoQ09a5Gux29hET1JaOG8q3Gfyj/hboVh/FimIjDjP8kUYR8hng7aMdjKo737eJCUZuKbgClhImMEuUBuXmEbEGUWWGDjQq3ncGkLvEHWu+B+pheQHNvFX+DpYJdG07mL6v8xj6Bz8WsyM7CPtBNMdv9VVHcxcMwajqO2rRdBdGpBGBavUYEI3k48Eik2hWyCZRWlKbv23FC1IPaPwD4DMCaGjEDorT1PFQGclCjl6d+3N3zdRjmpXfE2UZwZYKFkLbiYhHw1C1YtB1ma/CNfZW4gm3rHWVLKtb+tckUFSc/J9GNFeZBhR3Pt54Fb7Z8++eWloHNOH2spxU0mRwi68HMhu+t6zpyjmpKxcUM/pLc7u90hD8PoZIv9QBpJ63uQ1NkPZRCrLl1s3gxPREfvARCqPZ4Qx3uycLTz/mM9SjgBtCtQZUP15Z7OlGtekEYGqHFuVZBtLhwOI6RAkY4DZQlYrUf3mIwsZ5he7C++WVGVdZ4UXHevcFr0JfTPvVVeN/tBM8eXMCPT+JStg0IxW2mdrDbruRcHGiQ/Lp7wLrj1746g6PaHFy75HDN/GaicYzI+X6mCNNeQJLofev/kG211FeScio5Dmh+yM19vOFlBbzu8AYhXqqcKdaAMRMi0Bg4ufex7DiE8jKg1pwYXb3l48S/LOFvsN8Ie82Hi/qdUl0fynLAqJRhUU7IGd+NpXz+V1AJWaNK3qEb7UwNVJ5/2VwHv3zNgik7Mvu6DF2XeHzMAKSx6r9KdfTPFo4gUUcftVAN5xXbEK6fQfaj2oeTzs9VI/Mo3eUXjbC9Q2iCsRv26xEGuib+s0vFTvHHA+48866f0RofVX1rsstT/FXVg3atV0i3IWSu5PGPwNAm9iISHhNMfpDkyWOgP+LdW78wr59qaKWEfZV7gYXr29gvvQiyRqLHo2HgV+LF3jPJbIkRLyrVJ8c2gn8A2rHd2bJ1OhcDINxPXWVlwdCQOafcN77AG2TzjNU8wO/xWFyCXHK5w0aLUlF/jbw8qHJp3eoSPVmO9TOKSt4cLe7A/+W5PPAayZJMFogQ/JOcZoLo/rsgUm8dGT4olMjN5+i8J0/hzgD4v8IM/NMyzsMUv6Sokjz8HjvzhZjQWyGRopo+5rIClwXUnCpLyrbO7h5AMwrC1fZ261DVQxf5EQTQi0lW6A4vK5Prm+SJNHEk4Kwmsb+Q6FWUjKr+1ZR1OdhpS+KmDbzOVcg/+ntmgq3R7ZqiebJN5repyNhPIDGyGwUPwv0c/SaZK7R5hfVC3f3zZuPYDs3RH48hmgyTV3HwZ+86HWo9VLsa8+p0azmhJzYRfexkjkDZJ6GT8C99c+uxpbHPzM4YkKQfLqZ4It6uQ1HlYWKkejAEMpoLeALmBEdyuVVsdJzJ5vgSI8F+54M2A5jRapYuidUTA9vIdV3tG/e5wGlxpwegFCnRK2y+a1SU6YBUgzI3fzlVsNzGGbEfLzvtT6PJWXogxzp/lUT3Tyndn44tSZx+QBXqnLu21FhfTmcLivRNsXweE6DsnSqcnAv/dUvc1ppjrEDnbXw3ZymWp5+yeuQklXY2ytUVv+xs0saNoHnZf0RujUYIbi111lhQPxJ6ltB9uBw9ZZMR4sTns9JCOc52kF960I7l5fGobU7Slr6pkuiXiNqlxH0N44djTz9bwQipbs9uHFA9ghKKj3YZCt6hpOYemJ6BVvbI/ilBHJNX4ZH5K+ftxY2uWGwqXKmfFL4sLb5A45e6Zu19yw7+BS/ilQB9lQkzrUtbBQO6Ioh4ETlDXDQXJ4p09Y8GZpFqWx7qIELb5XSVvpF87AebiCRSxayqpsXR8uv5CHjsvEmLfkoF2tChMbmiMJR7em4qrEL91D7qAX1vxnWThkREarkmZ6zejlWxECQLytTLRX9mEqlkzLklxXxCrnN/TyrRKrpRLQMA8NvF/orAqGF3OMFkvTUPrIvwWyzSW2+ODWXv+9V16KSHux98fq14OPj+ifDqTddbppC3/GXSKMqcXxLdJMEC+7aRDY6fPyeN4qx5Wq2gLqkK8EZAs/zWkfNk18XDxgLJ8Yf46bMRVccJ97kgnCqhHVepP3gfPRRD55X+OLObpb0YQTBbQ2QpYyXIUVM0fFO41SZoOdMS21hmaVLU/13uemvIDgSwzPk2bSDO5kOoP+u5iI+1Vfpisaj8lXL/nzwG1LnegtF3f2ewX7CU8vMqgoJCAXNS14Z8IV5rcrFjvYHvofShwMUnO3a+jbI9OMgAUlvl//voigfBuoT0jYcc9Sf9OFg1lLz3rBl1E1xZVydXAtw2+TfctZ4hIKHoSMZSK/8raAQmsNELMMW/bVHcDSE9dSXKCRLMzH+F3NeeyP8lXieBQS7Fe/YGiJwoAfbNcVgXvKtcGTM+TAwWh80az79c/EuWzCbG9FFHjlQmnAuWTCUE5ibc=
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>4294967280</tag>
      </tags>
  </entry>
  <entry>
    <title>(未完)[NOIP2018]保卫王国做题笔记</title>
    <url>/2019/10/27/PN-NOIP2018-KingdomProtection/</url>
    <content><![CDATA[<!-- build time:Sat Nov 09 2019 15:35:17 GMT+0800 (GMT+08:00) --><a id="more"></a><h1 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h1><h2 id="Part-1"><a href="#Part-1" class="headerlink" title="Part 1"></a>Part 1</h2><p>树上DP,设$dp[i][state(state=0或1)]$是$i$结点时为$state$时,以$i$为根的子树最少花费,则有</p><script type="math/tex;mode=display">dp[u][0]=\sum_{E(u,v)}dp[v][1]\\
dp[u][1]=\sum_{E(u,b)}\min(dp[v][0],dp[v][1])</script><p>对于每一组询问($i$必须为$a$,$j$必须为$b$),使$dp[i][!a]=dp[j][!b]=INF$即可</p><h2 id="Part-2"><a href="#Part-2" class="headerlink" title="Part 2"></a>Part 2</h2><p>发现每次询问,都只有从$Root$分别到$i$和$j$的两条链上的结点$dp$值有变动,即从$Root$到$LCA(i,j)$,$LCA(i,j)$分别到$i$和$j$三条链上有变动,于是不需大量修改</p><blockquote><p>倍增法</p></blockquote><p>提前倍增预处理出$f[i][k][a][b]$表示$i$结点为$a$,$i$的第$2^k$个祖先为$b$时,除去$i$的子树及$i$,以$i$的第$2^k$个祖先为根的最小花费</p><script type="math/tex;mode=display">fa是i的父节点\\
f[i][0][1][0]=dp[fa][0]-dp[i][1]\\
f[i][0][1][1]=f[i][0][0][1]=f[i][dp[fa][1]-\min(dp[i][0],dp[i][1])\\</script><script type="math/tex;mode=display">fa(i,k)表示i的第k个祖先\\
f[i][k][a][b]=\min(f[i][k-1][a][0]+f[fa(i,k-1)][0][b],\\f[i][k-1][a][1]+f[fa(i,k-1)][1][b])</script><p>然后按LCA的模式处理询问即可</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>做题笔记</category>
        <category>NOIP2018</category>
      </categories>
      <tags>
        <tag>DP</tag>
        <tag>倍增</tag>
      </tags>
  </entry>
  <entry>
    <title>The Renovation of The Blog</title>
    <url>/2019/10/27/About-The-Renovation-of-Blog/</url>
    <content><![CDATA[<!-- build time:Sat Nov 09 2019 15:35:17 GMT+0800 (GMT+08:00) --><p>此博客已翻新完毕于2019.10.27,旧文档尚未就位,博客优化进程终止</p><a id="more"></a><hr><p>为防止博客优化进程消耗精力,影响学习主进程及第三轮攻势,于2019.10.26至2020.7.1之间全面终止博客优化进程并禁止重启</p><blockquote><p>中央委员会批示</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>杂文</category>
      </categories>
      <tags>
        <tag>BLOG</tag>
      </tags>
  </entry>
</search>
